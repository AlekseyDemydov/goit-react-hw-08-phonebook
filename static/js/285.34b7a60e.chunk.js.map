{"version":3,"file":"static/js/285.34b7a60e.chunk.js","mappings":"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","sources":["components/AuthorizationForm/AuthorizationForm.jsx","pages/Register.jsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {\n  registerUser,\n  loginUser,\n} from '../../redux/authorization/authorizationOperation';\nimport { getAutError } from '../../redux/authorization/authorizationSelector';\nimport { useEffect } from 'react';\nimport { changeError } from '../../redux/authorization/authorizationSlice';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#13b3ff',\n      dark: '#0197f6',\n      contrastText: '#fff',\n    },\n  },\n});\n\nconst AuthorizationForm = ({ title }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(getAutError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error('You have entered invalid data. Please try again.', {\n      autoClose: 2000,\n      theme: 'colored',\n    });\n  }, [error]);\n\n  const onLinkClick = e => {\n    dispatch(changeError());\n  };\n\n  const onInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'name':\n        setName(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    if (\n      (title === 'Register' && name === '') ||\n      password === '' ||\n      email === ''\n    ) {\n      toast.error('All fields must be completed', {\n        autoClose: 2000,\n        theme: 'colored',\n      });\n      return;\n    }\n    if (title === 'Register') {\n      const userRegisterData = { name, email, password };\n      dispatch(registerUser(userRegisterData));\n      reset();\n      return;\n    }\n    const userLoginData = { email, password };\n    dispatch(loginUser(userLoginData));\n    reset();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h2\" variant=\"h5\">\n          {title}\n        </Typography>\n        <Box component=\"form\" onSubmit={onFormSubmit} noValidate sx={{ mt: 1 }}>\n          {title === 'Register' && (\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              type=\"text\"\n              autoComplete=\"current-name\"\n              required\n              value={name}\n              onChange={onInputChange}\n            />\n          )}\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            required\n            value={email}\n            onChange={onInputChange}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            id=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            minLength={7}\n            required\n            value={password}\n            onChange={onInputChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            {title}\n          </Button>\n          <Link\n            to={title === 'Register' ? '/login' : '/register'}\n            variant=\"body2\"\n            onClick={onLinkClick}\n          >\n            {title === 'Register'\n              ? 'Do you have already account? Sign In'\n              : \"Don't have an account? Sign Up\"}\n          </Link>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nAuthorizationForm.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default AuthorizationForm;\n","import AuthorizationForm from '../components/AuthorizationForm/AuthorizationForm';\n\nfunction Register() {\n  return <AuthorizationForm title=\"Register\" />;\n}\n\nexport default Register;\n"],"names":["theme","createTheme","palette","primary","main","dark","contrastText","title","useState","name","setName","email","setEmail","password","setPassword","error","useSelector","getAutError","dispatch","useDispatch","useEffect","toast","autoClose","onInputChange","e","target","value","reset","sx","display","flexDirection","alignItems","m","bgcolor","component","variant","onSubmit","event","preventDefault","userRegisterData","registerUser","userLoginData","loginUser","noValidate","mt","margin","fullWidth","id","label","type","autoComplete","required","onChange","autoFocus","minLength","mb","to","onClick","changeError"],"sourceRoot":""}